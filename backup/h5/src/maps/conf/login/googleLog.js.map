{"version":3,"sources":["conf/login/googleLog.js"],"names":["define","require","exports","module","check","storage","UI","ajax","gapi","load","auth2","init","client_id","scope","$","click","ga","isSignedIn","get","signIn","grantOfflineAccess","then","signInCallback","authResult","listen","profile","currentUser","w3","console","log","userInfo","id","Eea","thirdPartyAccountType","thirdPartyAccessToken","getAuthResponse","id_token","name","ig","facePicUrl","Paa","_url","query","url","success","data","code","isBound","setItem","location","replace","assign","alertSecond","message","error"],"mappings":"AAAA;AACA;;;;;;;;;;;;AAYAA,OAAO,yBAAP,EAAkC,UAAUC,OAAV,EAAmBC,OAAnB,EAA4BC,MAA5B,EAAoC;AACrEF,SAAQ,GAAR;AACA,KAAIG,QAAQH,QAAQ,qBAAR,CAAZ;AAAA,KACII,UAAUJ,QAAQ,sBAAR,CADd;AAAA,KAEIK,KAAKL,QAAQ,oBAAR,CAFT;AAAA,KAGCM,OAAON,QAAQ,qBAAR,CAHR;AAIAO,MAAKC,IAAL,CAAU,OAAV,EAAmB,YAAW;AAC7B,MAAIC,QAAQF,KAAKE,KAAL,CAAWC,IAAX,CAAgB;AACnBC,cAAW,0EADQ;AAEnBC,UAAO;AACP;AACA;AAJmB,GAAhB,CAAZ;AAMIC,IAAE,eAAF,EAAmBC,KAAnB,CAAyB,YAAW;AACvC;AACA;;AAESC,MAAG,MAAH,EAAW,OAAX,EAAoB,YAApB,EAAkC,wBAAlC;AACT,OAAIN,MAAMO,UAAN,CAAiBC,GAAjB,EAAJ,EAA4B;AACzBC;AACF,IAFD,MAEK;AACJT,UAAMU,kBAAN,GAA2BC,IAA3B,CAAgCC,cAAhC;AACA;AACD,GAVG;AAWJ,WAASA,cAAT,CAAwBC,UAAxB,EAAoC;AACnCb,SAAMO,UAAN,CAAiBO,MAAjB,CAAwB,YAAW;AAChCL;AACF,IAFD;AAGA;AACD,WAASA,MAAT,GAAiB;AAChB,OAAIM,UAAUf,MAAMgB,WAAN,CAAkBR,GAAlB,GAAwBS,EAAtC;AACEC,WAAQC,GAAR,CAAYJ,OAAZ;AACA,OAAIK,WAAU;AACZC,QAAGN,QAAQO,GADC;AAEZC,2BAAuB,QAFX;AAGZC,2BAAsBxB,MAAMgB,WAAN,CAAkBR,GAAlB,GAAwBiB,eAAxB,GAA0CC,QAHpD;AAIZC,UAAKZ,QAAQa,EAJD;AAKZC,gBAAWd,QAAQe;AALP,IAAd;AAOA,OAAIC,OAAO,yCAAuCX,SAASC,EAAhD,GAAmD,yBAAnD,GAA6ED,SAASI,qBAAtF,GAA4G,yBAA5G,GAAsIJ,SAASG,qBAA1J;AACC1B,QAAKmC,KAAL,CAAW;AACVC,SAAKF,IADK;AAEVG,aAAS,iBAACC,IAAD,EAAU;AACR,SAAIA,KAAKC,IAAL,KAAc,GAAlB,EAAuB;AACtB,UAAID,KAAKA,IAAL,CAAUE,OAAd,EAAuB;AACtB;AACA1C,eAAQ2C,OAAR,CAAgB,UAAhB,EAA2BlB,QAA3B;AACAmB,gBAASC,OAAT,CAAiB,GAAjB;AACA,OAJD,MAIK;AACJ;AACA7C,eAAQ2C,OAAR,CAAgB,UAAhB,EAA2BlB,QAA3B;AACAmB,gBAASE,MAAT,CAAgB,mBAAhB;AACA;AACD,MAVD,MAUO;AACA7C,SAAG8C,WAAH,CAAeP,KAAKQ,OAApB;AACC,aAAO,KAAP;AACP;AACJ,KAjBE;AAkBPC,WAAM,eAACT,IAAD,EAAU;AACdvC,QAAG8C,WAAH,CAAeP,KAAKQ,OAApB;AACG,YAAO,KAAP;AACJ;AArBM,IAAX;AAuBH;AACD,EA1DD;AA2DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CA7ED","file":"../../../js_es6/conf/login/googleLog.js","sourcesContent":["'use strict';\n/**\n * googl+ 第三方登录/注册\n * @author guodanying\n * @date 20170220\n * 页面引用\n * <script src=\"__PUBLIC__/js/lithe.js\"\n data-config=\"config.js\"\n data-debug=\"true\"\n data-main=\"conf/login/googleLog.js\">\n </script>\n*/\n\ndefine('conf/login/googleLog.js', function (require, exports, module) {\n\trequire('$');\n\tvar check = require('mods/check/input.js'),\n\t    storage = require('mods/storage/storage'),\n\t    UI = require('UI/dialog/alert.js'),\n\t\tajax = require('utils/async/ajax.js');\n\tgapi.load('auth2', function() {\n\t\tvar auth2 = gapi.auth2.init({\n\t          client_id: '114362993453-5duccv5c6m0q3agfnassl0gsmpd673ng.apps.googleusercontent.com',\n\t          scope: 'profile'\n\t          // Scopes to request in addition to 'profile' and 'email'\n\t          //scope: 'additional_scope'\n\t    });\n\t     $('#signinButton').click(function() {\n\t\t\t/*console.log(auth2.isSignedIn.get())*/\n\t\t\t//埋点\n           \n            ga('send', 'event', 'login/sign', 'login_google_btn_click');\n\t\t\tif (auth2.isSignedIn.get()) {\n\t\t\t\t  signIn();\n\t\t\t}else{\n\t\t\t\tauth2.grantOfflineAccess().then(signInCallback);\n\t\t\t};\n\t\t})\n\t\tfunction signInCallback(authResult) {\n\t\t\tauth2.isSignedIn.listen(function (){\n\t\t\t  \tsignIn();\n\t\t\t});\n\t\t};\n\t\tfunction signIn(){\n\t\t\tvar profile = auth2.currentUser.get().w3;\n\t\t  \tconsole.log(profile);\n\t\t  \tvar userInfo ={\n\t\t\t\t  \tid:profile.Eea,\n\t\t\t\t  \tthirdPartyAccountType: \"GOOGLE\",\n\t\t\t\t  \tthirdPartyAccessToken:auth2.currentUser.get().getAuthResponse().id_token,\n\t\t\t\t  \tname:profile.ig,\n\t\t\t\t  \tfacePicUrl:profile.Paa\n\t\t\t\t  };\n\t\t  \tvar _url = '/api/user/thirdPartyAccountLogin?id='+userInfo.id+'&thirdPartyAccessToken='+userInfo.thirdPartyAccessToken+'&thirdPartyAccountType='+userInfo.thirdPartyAccountType;\n\t\t    ajax.query({\n\t\t    \turl: _url,\n\t\t    \tsuccess: (data) => {\n\t\t                if (data.code === 200) {\n\t\t                \tif( data.data.isBound ){\n\t\t                \t\t//第三方登录\n\t\t                \t\tstorage.setItem('ascToken',userInfo);\n\t\t                \t\tlocation.replace('/');\n\t\t                \t}else{\n\t\t                \t\t//第三方注册\n\t\t                \t\tstorage.setItem('ascToken',userInfo);\n\t\t                \t\tlocation.assign('/login/associated');\n\t\t                \t}\n\t\t                } else {\n\t\t                       UI.alertSecond(data.message);\n\t\t                        return false;\n\t\t                }\n\t\t            },\n\t\t        error:(data) => {\n\t\t        \t UI.alertSecond(data.message);\n\t\t             return false;\n\t\t        }\n\t\t    })\n\t\t}\n\t})\n\t// gapi.load('auth2', function() {\n //        // window.auth2 = gapi.auth2.init({\n //        //   client_id: '114362993453-5duccv5c6m0q3agfnassl0gsmpd673ng.apps.googleusercontent.com',\n //        //   scope: 'profile'\n //        //   // Scopes to request in addition to 'profile' and 'email'\n //        //   //scope: 'additional_scope'\n //        // });\n //        var auth2 = gapi.auth2.getAuthInstance();\n //        console.log(gapi.auth2);\n //        console.log(auth2);\n          \n //    });\n})\n"]}