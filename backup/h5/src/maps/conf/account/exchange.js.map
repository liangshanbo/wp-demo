{"version":3,"sources":["conf/account/exchange.js"],"names":["define","require","exports","module","$","ajax","Vue","UI","storage","commonMod","bindExchangeEvents","states","renderCompleted","shownElementName","cardId","isExchanging","iconFlySwitch","successfulExchanges","badgeBlinkSwitch","toastDuration","cardListRes","code","data","balance","amount","giftCards","vm","el","methods","fetchGiftcardsList","query","url","success","res","$nextTick","scrollIntoTargetSelector","error","showExchangePrompt","evt","target","sendExchangeReq","post","id","result","removeMaskAndAlert","message","fail","checkNetwork","msg","exchangeSuccessful","alertSecond","setTimeout","animate","waitTime","window","navigator","onLine","setItem","toMyGiftcards","removeItem","newRef","location","href","replace","init","setFilters","created","getItem"],"mappings":"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","file":"../../../js_es6/conf/account/exchange.js","sourcesContent":["/**\n * 礼品卡兑换 - h5\n * @author 张恩铭\n * @date 20170324\n * 页面引用\n *  <script src=\"__PUBLIC__/js/lithe.js\"\n data-config=\"config.js\"\n data-debug=\"true\"\n data-main=\"conf/account/exchange.js\">\n </script>\n */\n define('conf/account/exchange.js', function(require, exports, module) {\n    const $ = require('$');\n    const ajax = require('utils/async/ajax.js');\n    const Vue = require('vue');\n    const UI = require('UI/dialog/alert');\n    const storage = require('mods/storage/storage');\n\n    const commonMod = require('conf/account/_common.js');\n\n    $(bindExchangeEvents);\n\n    function bindExchangeEvents() {\n\n        let states = {\n            // 公共方法\n            commonMod,\n            // 首次渲染完成\n            renderCompleted: false,\n            // 要显示的遮罩层子元素\n            shownElementName: '',\n            // 要兑换的卡号\n            cardId: '',\n            // 兑换请求是否已完成\n            isExchanging: false,\n            // 浮动图标的动画开关\n            iconFlySwitch: false,\n            // 兑换成功次数，控制右上角礼品卡图标的通知\n            successfulExchanges: 0,\n            // 通知闪烁开关\n            badgeBlinkSwitch: false,\n            // toast持续时间\n            toastDuration: 2000,\n            // 礼品卡数据\n            cardListRes: {\n                code: 0,\n                data: {\n                    balance: {\n                        amount: 0,\n                    },\n                    giftCards: [],\n                },\n            },\n        };\n\n        let vm = new Vue({\n            el: 'body',\n            data() {\n                return states;\n            },\n            methods: {\n                /*\n                更新giftcards列表。请求失败则使用现有列表\n                */\n                fetchGiftcardsList() {\n                    ajax.query({\n                        url: '/api/trade/giftCards',\n                        success(res) {\n                            if (res.code === 200) {\n                                vm.cardListRes = res;\n                            }\n                            if (vm.cardId !== '') {\n                                vm.$nextTick(function() {\n                                    commonMod.scrollIntoTargetSelector('.cards-li');\n                                });\n                            }\n                            vm.renderCompleted = true;\n                        },\n                        error() {\n                            vm.renderCompleted = true;\n                        },\n                    });\n                },\n                /*\n                取得按钮的card-id属性，显示兑换对话框浮层\n                */\n                showExchangePrompt(evt) {\n                    if (!this.isExchanging) {\n                        this.cardId = $(evt.target).data('card-id');\n                        this.shownElementName = 'prompt';\n                    }\n                },\n                /*\n                发送兑换请求，请求结束后移除遮罩层\n                */\n                sendExchangeReq() {\n                    this.shownElementName = 'loading';\n                    ajax.post({\n                        url: '/api/trade/myGiftCard',\n                        data: {\n                            id: vm.cardId\n                        },\n                        success: function(result) {\n                            if (result.code === 200) {\n                                vm.removeMaskAndAlert(\n                                    'Exchanged Sucessfully. Check it in My Gift Voucher.',\n                                    true\n                                );\n                            } else {\n                                vm.removeMaskAndAlert(\n                                    result.message,\n                                    false\n                                );\n                            }\n                        },\n                        fail: function(result) {\n                            vm.removeMaskAndAlert('Exchange failed.', false);\n                        },\n                    });\n                    this.checkNetwork();\n                },\n                /*\n                移除遮罩层后，toast提示信息，toast消失后，根据兑换的结果启动动画\n                */\n                removeMaskAndAlert(msg, exchangeSuccessful) {\n                    // 移除遮罩层和子元素\n                    this.shownElementName = '';\n                    // 提供字符串参数时toast之\n                    if (typeof msg === 'string') {\n                        // 暂时禁用兑换按钮\n                        this.isExchanging = true;\n                        // toast消失后，根据兑换结果启动动画\n                        UI.alertSecond(\n                            msg,\n                            null,\n                            this.toastDuration\n                        );\n                        setTimeout(function() {\n                            vm.animate(exchangeSuccessful);\n                        }, vm.toastDuration);\n                    }\n                    this.fetchGiftcardsList();\n                },\n                /*\n                超时提示\n                */\n                checkNetwork(waitTime = 3000) {\n                    setTimeout(function() {\n                        if (!window.navigator.onLine) {\n                            vm.removeMaskAndAlert('Please check your network.');\n                        };\n                    }, waitTime);\n                },\n                /*\n                兑换动画\n                */\n                animate(exchangeSuccessful) {\n                    // 若兑换成功则在动画结束后启用兑换按钮、增加右上角图标通知\n                    if (exchangeSuccessful === true) {\n                        ++vm.successfulExchanges;\n                        vm.iconFlySwitch\n                            = vm.badgeBlinkSwitch = true;\n                        setTimeout(function() {\n                            vm.iconFlySwitch\n                                = vm.isExchanging\n                                = vm.badgeBlinkSwitch\n                                = false;\n                        }, 1100);\n                        // 检查ls，判断是否显示红点\n                        storage.setItem('showPoint', 'true');\n                    // 否则立即启用\n                    } else {\n                        vm.isExchanging = false;\n                    }\n                },\n                /*\n                \b跳转至礼品卡页，重置小红点相关的数据\n                */\n                toMyGiftcards() {\n                    // 点击该按钮后修改ls\n                    storage.removeItem('showPoint');\n                    this.successfulExchanges = 0;\n                    this.badgeBlinkSwitch = false;\n                    let newRef = window.location.href.replace(\n                        '/account/exchange',\n                        '/account/giftcard'\n                    );\n                    window.location = newRef;\n                },\n            },\n            /*\n            注册过滤器\n            */\n            init() {\n                commonMod.setFilters();\n            },\n            /*\n            更新数据，初始化链接的点击状态\n            */\n            created() {\n                this.fetchGiftcardsList();\n                // 检查ls，判断是否显示红点\n                if (storage.getItem('showPoint') === 'true') {\n                    this.successfulExchanges = 1;\n                }\n            },\n        });\n\n    }\n});\n"]}