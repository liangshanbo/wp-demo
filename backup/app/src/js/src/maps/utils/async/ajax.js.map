{"version":3,"sources":["utils/async/ajax.js"],"names":["define","require","exports","module","alert","defaults_xhr","defaults","type","dataType","success","error","data","Ajax","window","fetch","_ajax","_fetch","_xhr","params","Object","assign","options","url","alertSecond","df","xmlhttp","XMLHttpRequest","ops","_url_get","open","setRequestHeader","responseType","onload","status","readyState","res","response","JSON","parse","console","log","ontimeout","stringify","send","args","method","mode","cache","credentials","headers","body","then","ok","json","obj","FormData","append","str","key","substr","length","arr","push","includes","join"],"mappings":"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","file":"../../../../utils/async/ajax.js","sourcesContent":["/**\r\n * [description] ajax\r\n * 2017-02-08\r\n * query 查询get方法 \r\n * post  post\r\n *\r\n * params:  {\r\n    url: \"\", // 必填\r\n    type: \"\", // 选填 [get,post]\r\n    success: function() {}, //选填 成功的回调\r\n    error: function(){}, // 选填 失败的回调\r\n    data: null, // 选填\r\n    dataType: \"\" //选填\r\n}      \r\n */\r\ndefine(\"utils/async/ajax\", function(require, exports, module) {\r\n    require('lib/polyfill/object.js');\r\n    let alert = require('UI/dialog/alert.js');\r\n\r\n    const defaults_xhr = {\r\n        defaults: {\r\n            type: 'post',\r\n            dataType: 'json',\r\n            success: function() {},\r\n            error: function() {},\r\n            data: null\r\n        }\r\n    };\r\n\r\n    class Ajax {\r\n        constructor() {\r\n            if (typeof window.fetch !== \"undefined\") {\r\n                this._ajax = this._fetch;\r\n            } else {\r\n                this._ajax = this._xhr;\r\n            }\r\n        }\r\n        query(params) {\r\n            this._ajax(Object.assign({ type: \"GET\" }, params));\r\n        }\r\n        post(params) {\r\n            this._ajax(Object.assign({ type: \"POST\" }, params));\r\n        }\r\n        put(params) {\r\n            this._ajax(Object.assign({ type: \"PUT\" }, params));\r\n        }\r\n        delete(params) {\r\n            this._ajax(Object.assign({ type: \"DELETE\" }, params));\r\n        }\r\n        _xhr(options) {\r\n            if (!options.url) {\r\n                alert.alertSecond(\"url是必填参数\");\r\n                return;\r\n            }\r\n            let df = defaults_xhr,\r\n                xmlhttp = new XMLHttpRequest(),\r\n                ops = Object.assign({}, df.defaults, options);\r\n\r\n            if (ops.data && ops.type == \"GET\") {\r\n                ops.url = this._url_get(ops.url, ops.data);\r\n            }\r\n            xmlhttp.open(ops.type, ops.url, true);\r\n            xmlhttp.setRequestHeader(\"Content-type\", \"application/json\");\r\n            xmlhttp.responseType = ops.dataType;\r\n            // xmlhttp.timeout = 3000;\r\n            xmlhttp.onload = () => {\r\n                if (xmlhttp.status === 200 && xmlhttp.readyState === 4) {\r\n                    // let res = xmlhttp.response || {};\r\n                    // if (typeof res === 'object' && 'code' in res && res['code'] === 401) {\r\n                    //     alert.alertSecond(res.message);\r\n                    // }\r\n                    let res = xmlhttp.response;\r\n                    res = (typeof res == \"string\") ? JSON.parse(res) : res;\r\n                    ops.success(res);\r\n                } else {\r\n                    console.log('request is fail');\r\n                }\r\n            }\r\n            xmlhttp.ontimeout = () => {\r\n                console.log('请求超时');\r\n            }\r\n            let data = JSON.stringify(ops.data || {})\r\n            xmlhttp.send(data || null);\r\n        }\r\n        _fetch(options) {\r\n            if (!options.url) {\r\n                alert.alertSecond(\"url是必填参数\");\r\n                return;\r\n            }\r\n            let args = {\r\n                method: options.type,\r\n                mode: 'cors',\r\n                cache: 'default',\r\n                credentials: 'include', // 请求带上cookies，是每次请求保持会话一直  \r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            };\r\n            if (options.data) {\r\n                if (options.type == \"GET\") {\r\n                    options.url = this._url_get(options.url, options.data);\r\n                } else {\r\n                    args.body = JSON.stringify(options.data || {});\r\n                }\r\n            }\r\n\r\n            fetch(options.url, args)\r\n                .then(function(res) {\r\n                    if (res.ok) {\r\n                        //暂时只处理json格式的数据\r\n                        // if (res.headers.get(\"content-type\").indexOf(\"application/json\") >= 0) {\r\n                        res.json().then(function(data) {\r\n                            options.success(data);\r\n                        });\r\n                        // } else {\r\n                        // alert.alertSecond(\"暂不支持此格式\");\r\n                        // }\r\n                    }\r\n                });\r\n        }\r\n        _formatParams(obj) {\r\n            // let formdata = new FormData();\r\n            // for (let key in obj) {\r\n            //     formdata.append(key, obj[key]);\r\n            // }\r\n            // return formdata;\r\n            // var arr = new Array();\r\n            // var i = 0;\r\n            // for (var attr in obj) {\r\n            //     arr[i] = encodeURIComponent(attr) + \"=\" + encodeURIComponent(obj[attr]);\r\n            //     i++;\r\n            // }\r\n            // return arr.join(\"&\");\r\n            var data = new FormData();\r\n            data.append(\"json\", JSON.stringify(obj));\r\n            return data;\r\n        }\r\n        _fetchParams(obj) {\r\n            let str = \"\";\r\n            for (let key in obj) {\r\n                str += key + \"=\" + obj[key] + \"&\";\r\n            }\r\n            return str.substr(0, str.length - 1);\r\n        }\r\n        _url_get(url, obj) {\r\n            let arr = [];\r\n            for (let key in obj) {\r\n                arr.push(key + \"=\" + obj[key]);\r\n            }\r\n            url += (url.includes(\"?\") ? \"&\" : \"?\") + arr.join(\"&\");\r\n            return url;\r\n        }\r\n    }\r\n\r\n    module.exports = new Ajax();\r\n});\r\n"]}